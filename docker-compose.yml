# version: '3.8'

# services:
#   # Django Web Application
#   web:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     command: python manage.py runserver 0.0.0.0:8080
#     volumes:
#       - .:/app
#     ports:
#       - "8080:8080"
#     environment:
#       - DJANGO_SETTINGS_MODULE=Bodhitree_AI_Server.settings
#       - REDIS_HOST=redis
#       - MONGODB_HOST=mongodb
#       - MINIO_HOST=minio1
#       - MLFLOW_HOST=mlflow
#     depends_on:
#       - redis
#       - mongodb
#       - minio1
#       - mlflow
#       - prometheus
#       - grafana

#   # Celery Worker
#   celery_worker:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     command: celery -A Bodhitree_AI_Server worker -Q celery,datacollector,tabuddy --concurrency=1 --loglevel=debug
#     volumes:
#       - .:/app
#     environment:
#       - DJANGO_SETTINGS_MODULE=Bodhitree_AI_Server.settings
#       - REDIS_HOST=redis
#       - MONGODB_HOST=mongodb
#       - MINIO_HOST=minio1
#       - MLFLOW_HOST=mlflow
#     depends_on:
#       - redis
#       - web

#   # Celery Beat
#   celery_beat:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     command: celery -A Bodhitree_AI_Server beat -l info
#     volumes:
#       - .:/app
#     environment:
#       - DJANGO_SETTINGS_MODULE=Bodhitree_AI_Server.settings
#       - REDIS_HOST=redis
#     depends_on:
#       - redis
#       - web

#   # Redis
#   redis:
#     image: redis:alpine
#     ports:
#       - "6379:6379"

#   # MongoDB
#   mongodb:
#     image: mongo:4.4
#     user: "${CURRENT_UID}"
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongodb_data:/data/db

#   # MinIO
#   minio1:
#     image: minio/minio:RELEASE.2021-06-17T00-10-46Z
#     ports:
#       - "9000-9001:9000-9001"
#     volumes:
#       - minio_data:/data
#     environment:
#       - MINIO_ACCESS_KEY=root
#       - MINIO_SECRET_KEY=root1234
#     command: server /data

#   # MLflow
#   mlflow:
#     build:
#       context: .
#       dockerfile: Dockerfile.mlflow
#     ports:
#       - "5000:5000"
#     environment:
#       - MLFLOW_S3_ENDPOINT_URL=http://minio1:9000
#       - AWS_ACCESS_KEY_ID=root
#       - AWS_SECRET_ACCESS_KEY=root1234
#       - BACKEND_STORE_URI=sqlite:////mlflow/mlflow.db
#       - DEFAULT_ARTIFACT_ROOT=s3://minio-mlflow-bucket/
#     volumes:
#       - mlflow_data:/mlflow
#     depends_on:
#       - minio1

#   # Prometheus
#   prometheus:
#     image: prom/prometheus
#     ports:
#       - "9090:9090"
#     volumes:
#       - ./prometheus.yml:/etc/prometheus/prometheus.yml
#       - prometheus_data:/prometheus

#   # Grafana
#   grafana:
#     image: grafana/grafana
#     ports:
#       - "3000:3000"
#     volumes:
#       - grafana_data:/var/lib/grafana
#     depends_on:
#       - prometheus

# volumes:
#   mongodb_data:
#   minio_data:
#   mlflow_data:
#   prometheus_data:
#   grafana_data:

# version: '3.9'

# services:
#   # Django Web Application
#   web:
#     build: .
#     command: python manage.py runserver 0.0.0.0:8080
#     volumes:
#       - .:/app
#     ports:
#       - "8080:8080"
#     environment:
#       - DJANGO_SETTINGS_MODULE=Bodhitree_AI_Server.settings
#       - REDIS_HOST=redis
#       - MONGODB_HOST=mongodb
#       - MINIO_HOST=minio1
#       - MLFLOW_HOST=mlflow
#     depends_on:
#       - redis
#       - mongodb
#       - minio1
#       - mlflow
#       - prometheus
#       - grafana

#   # Celery Worker
#   celery_worker:
#     build: .
#     command: celery -A Bodhitree_AI_Server worker -Q celery,datacollector,tabuddy --concurrency=1 --loglevel=debug
#     volumes:
#       - .:/app
#     environment:
#       - DJANGO_SETTINGS_MODULE=Bodhitree_AI_Server.settings
#       - REDIS_HOST=redis
#       - MONGODB_HOST=mongodb
#       - MINIO_HOST=minio1
#       - MLFLOW_HOST=mlflow
#     depends_on:
#       - redis
#       - mongodb
#       - minio1
#       - mlflow
#       - prometheus
#       - grafana

#   # Celery Beat
#   celery_beat:
#     build: .
#     command: celery -A Bodhitree_AI_Server beat -l info
#     volumes:
#       - .:/app
#     environment:
#       - DJANGO_SETTINGS_MODULE=Bodhitree_AI_Server.settings
#       - REDIS_HOST=redis
#     depends_on:
#       - redis
#       - mongodb
#       - minio1
#       - mlflow
#       - prometheus
#       - grafana

#   # Redis
#   redis:
#     image: redis:alpine
#     ports:
#       - "6379:6379"

#   # MongoDB
#   mongodb:
#     image: mongo:4.4
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongodb_data:/data/db

#   # MinIO
#   minio1:
#     image: minio/minio:RELEASE.2021-06-17T00-10-46Z
#     ports:
#       - "9000-9001:9000-9001"
#     volumes:
#       - minio_data:/data
#     environment:
#       - MINIO_ACCESS_KEY=root
#       - MINIO_SECRET_KEY=root1234
#     command: server /data

#   # MLflow
#   mlflow:
#     image: mlflow-server  # Using your pre-built image
#     ports:
#       - "5000:5000"
#     environment:
#       - MLFLOW_S3_ENDPOINT_URL=http://minio1:9000
#       - AWS_ACCESS_KEY_ID=root
#       - AWS_SECRET_ACCESS_KEY=root1234
#       - BACKEND_STORE_URI=sqlite:////mlflow/mlflow.db
#       - DEFAULT_ARTIFACT_ROOT=s3://minio-mlflow-bucket/
#     volumes:
#       - mlflow_data:/mlflow
#     depends_on:
#       - minio1

#   # Prometheus
#   prometheus:
#     image: prom/prometheus
#     ports:
#       - "9090:9090"
#     volumes:
#       - ./prometheus.yml:/etc/prometheus/prometheus.yml
#       - prometheus_data:/prometheus

#   # Grafana
#   grafana:
#     image: grafana/grafana
#     ports:
#       - "3000:3000"
#     volumes:
#       - grafana_data:/var/lib/grafana
#     depends_on:
#       - prometheus

# volumes:
#   mongodb_data:
#   minio_data:
#   mlflow_data:
#   prometheus_data:
#   grafana_data:

version: '3.9'

services:
  # Django Web Application
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8080
    volumes:
      - .:/app
    ports:
      - "8080:8080"
    environment:
      - DJANGO_SETTINGS_MODULE=Bodhitree_AI_Server.settings
      - REDIS_HOST=redis
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DB=your_database_name
      - MINIO_HOST=minio1
      - MLFLOW_HOST=mlflow
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    depends_on:
      - redis
      - mongodb
      - minio1
      - mlflow
      - prometheus
      - grafana

  # Celery Worker (with GPU access)
  celery_worker:
    build: 
      context: .
      dockerfile: Dockerfile
    command: celery -A Bodhitree_AI_Server worker -Q celery,datacollector,tabuddy --concurrency=1 --loglevel=debug
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=Bodhitree_AI_Server.settings
      - REDIS_HOST=redis
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DB=ai_bodhitree
      - MINIO_HOST=minio1
      - MLFLOW_HOST=mlflow
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    depends_on:
      - redis
      - web

  # Celery Beat
  celery_beat:
    build: 
      context: .
      dockerfile: Dockerfile
    command: celery -A Bodhitree_AI_Server beat -l info
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=Bodhitree_AI_Server.settings
      - REDIS_HOST=redis
    depends_on:
      - redis
      - web

  # Redis
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  # MongoDB
  mongodb:
    image: mongo:4.4
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  # MinIO
  minio1:
    image: minio/minio:RELEASE.2021-06-17T00-10-46Z
    ports:
      - "9000-9001:9000-9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ACCESS_KEY=root
      - MINIO_SECRET_KEY=root1234
    command: server /data

  # MLflow (using your existing image)
  mlflow:
    image: mlflow-server
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio1:9000
      - AWS_ACCESS_KEY_ID=root
      - AWS_SECRET_ACCESS_KEY=root1234
      - BACKEND_STORE_URI=sqlite:////mlflow/mlflow.db
      - DEFAULT_ARTIFACT_ROOT=s3://minio-mlflow-bucket/
    volumes:
      - mlflow_data:/mlflow
    depends_on:
      - minio1

  # Prometheus
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  # Grafana
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  mongodb_data:
  minio_data:
  mlflow_data:
  prometheus_data:
  grafana_data: